// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: power.proto

#include "power.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace power_msg {
      template <typename>
PROTOBUF_CONSTEXPR PowerBoardStamped_DigitalEntry_DoNotUse::PowerBoardStamped_DigitalEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct PowerBoardStamped_DigitalEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PowerBoardStamped_DigitalEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PowerBoardStamped_DigitalEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PowerBoardStamped_DigitalEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PowerBoardStamped_DigitalEntry_DoNotUseDefaultTypeInternal _PowerBoardStamped_DigitalEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PowerBoardStamped_AnalogEntry_DoNotUse::PowerBoardStamped_AnalogEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct PowerBoardStamped_AnalogEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PowerBoardStamped_AnalogEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PowerBoardStamped_AnalogEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PowerBoardStamped_AnalogEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PowerBoardStamped_AnalogEntry_DoNotUseDefaultTypeInternal _PowerBoardStamped_AnalogEntry_DoNotUse_default_instance_;

inline constexpr PowerBoardStamped::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        digital_{},
        analog_{},
        header_{nullptr},
        mode_{static_cast< ::power_msg::MOTORMODE >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PowerBoardStamped::PowerBoardStamped(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PowerBoardStampedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PowerBoardStampedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PowerBoardStampedDefaultTypeInternal() {}
  union {
    PowerBoardStamped _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PowerBoardStampedDefaultTypeInternal _PowerBoardStamped_default_instance_;
}  // namespace power_msg
static ::_pb::Metadata file_level_metadata_power_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_power_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_power_2eproto = nullptr;
const ::uint32_t TableStruct_power_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped_DigitalEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped_DigitalEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped_DigitalEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped_DigitalEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped_AnalogEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped_AnalogEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped_AnalogEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped_AnalogEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped, _impl_.header_),
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped, _impl_.digital_),
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped, _impl_.analog_),
    PROTOBUF_FIELD_OFFSET(::power_msg::PowerBoardStamped, _impl_.mode_),
    0,
    ~0u,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::power_msg::PowerBoardStamped_DigitalEntry_DoNotUse)},
        {12, 22, -1, sizeof(::power_msg::PowerBoardStamped_AnalogEntry_DoNotUse)},
        {24, 36, -1, sizeof(::power_msg::PowerBoardStamped)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::power_msg::_PowerBoardStamped_DigitalEntry_DoNotUse_default_instance_._instance,
    &::power_msg::_PowerBoardStamped_AnalogEntry_DoNotUse_default_instance_._instance,
    &::power_msg::_PowerBoardStamped_default_instance_._instance,
};
const char descriptor_table_protodef_power_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\013power.proto\022\tpower_msg\032\tstd.proto\"\255\002\n\021"
    "PowerBoardStamped\022\037\n\006header\030\001 \001(\0132\017.std_"
    "msg.Header\022:\n\007digital\030\002 \003(\0132).power_msg."
    "PowerBoardStamped.DigitalEntry\0228\n\006analog"
    "\030\003 \003(\0132(.power_msg.PowerBoardStamped.Ana"
    "logEntry\022\"\n\004mode\030\004 \001(\0162\024.power_msg.MOTOR"
    "MODE\032.\n\014DigitalEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
    "ue\030\002 \001(\010:\0028\001\032-\n\013AnalogEntry\022\013\n\003key\030\001 \001(\t"
    "\022\r\n\005value\030\002 \001(\002:\0028\001*L\n\tMOTORMODE\022\r\n\tREST"
    "_MODE\020\000\022\022\n\016HALL_CALIBRATE\020\001\022\016\n\nMOTOR_MOD"
    "E\020\002\022\014\n\010SET_ZERO\020\003b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_power_2eproto_deps[1] =
    {
        &::descriptor_table_std_2eproto,
};
static ::absl::once_flag descriptor_table_power_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_power_2eproto = {
    false,
    false,
    425,
    descriptor_table_protodef_power_2eproto,
    "power.proto",
    &descriptor_table_power_2eproto_once,
    descriptor_table_power_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_power_2eproto::offsets,
    file_level_metadata_power_2eproto,
    file_level_enum_descriptors_power_2eproto,
    file_level_service_descriptors_power_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_power_2eproto_getter() {
  return &descriptor_table_power_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_power_2eproto(&descriptor_table_power_2eproto);
namespace power_msg {
const ::google::protobuf::EnumDescriptor* MOTORMODE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_power_2eproto);
  return file_level_enum_descriptors_power_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MOTORMODE_internal_data_[] = {
    262144u, 0u, };
bool MOTORMODE_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

PowerBoardStamped_DigitalEntry_DoNotUse::PowerBoardStamped_DigitalEntry_DoNotUse() {}
PowerBoardStamped_DigitalEntry_DoNotUse::PowerBoardStamped_DigitalEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata PowerBoardStamped_DigitalEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_power_2eproto_getter, &descriptor_table_power_2eproto_once,
      file_level_metadata_power_2eproto[0]);
}
// ===================================================================

PowerBoardStamped_AnalogEntry_DoNotUse::PowerBoardStamped_AnalogEntry_DoNotUse() {}
PowerBoardStamped_AnalogEntry_DoNotUse::PowerBoardStamped_AnalogEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata PowerBoardStamped_AnalogEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_power_2eproto_getter, &descriptor_table_power_2eproto_once,
      file_level_metadata_power_2eproto[1]);
}
// ===================================================================

class PowerBoardStamped::_Internal {
 public:
  using HasBits = decltype(std::declval<PowerBoardStamped>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_._has_bits_);
  static const ::std_msg::Header& header(const PowerBoardStamped* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::std_msg::Header& PowerBoardStamped::_Internal::header(const PowerBoardStamped* msg) {
  return *msg->_impl_.header_;
}
void PowerBoardStamped::clear_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PowerBoardStamped::PowerBoardStamped(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:power_msg.PowerBoardStamped)
}
inline PROTOBUF_NDEBUG_INLINE PowerBoardStamped::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        digital_{visibility, arena, from.digital_},
        analog_{visibility, arena, from.analog_} {}

PowerBoardStamped::PowerBoardStamped(
    ::google::protobuf::Arena* arena,
    const PowerBoardStamped& from)
    : ::google::protobuf::Message(arena) {
  PowerBoardStamped* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::std_msg::Header>(arena, *from._impl_.header_)
                : nullptr;
  _impl_.mode_ = from._impl_.mode_;

  // @@protoc_insertion_point(copy_constructor:power_msg.PowerBoardStamped)
}
inline PROTOBUF_NDEBUG_INLINE PowerBoardStamped::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        digital_{visibility, arena},
        analog_{visibility, arena} {}

inline void PowerBoardStamped::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::mode_));
}
PowerBoardStamped::~PowerBoardStamped() {
  // @@protoc_insertion_point(destructor:power_msg.PowerBoardStamped)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PowerBoardStamped::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PowerBoardStamped::Clear() {
// @@protoc_insertion_point(message_clear_start:power_msg.PowerBoardStamped)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.digital_.Clear();
  _impl_.analog_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_.mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PowerBoardStamped::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 3, 49, 2> PowerBoardStamped::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PowerBoardStamped_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .power_msg.MOTORMODE mode = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PowerBoardStamped, _impl_.mode_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_.mode_)}},
    // .std_msg.Header header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .std_msg.Header header = 1;
    {PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, bool> digital = 2;
    {PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_.digital_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, float> analog = 3;
    {PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_.analog_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .power_msg.MOTORMODE mode = 4;
    {PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_.mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::std_msg::Header>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PowerBoardStamped()._impl_.digital_)>(
        1, 0, 0, 9,
        8)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PowerBoardStamped()._impl_.analog_)>(
        1, 0, 0, 9,
        2)},
  }}, {{
    "\33\0\7\6\0\0\0\0"
    "power_msg.PowerBoardStamped"
    "digital"
    "analog"
  }},
};

::uint8_t* PowerBoardStamped::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:power_msg.PowerBoardStamped)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .std_msg.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // map<string, bool> digital = 2;
  if (!_internal_digital().empty()) {
    using MapType = ::google::protobuf::Map<std::string, bool>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, bool,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BOOL>;
    const auto& field = _internal_digital();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "power_msg.PowerBoardStamped.digital");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "power_msg.PowerBoardStamped.digital");
      }
    }
  }

  // map<string, float> analog = 3;
  if (!_internal_analog().empty()) {
    using MapType = ::google::protobuf::Map<std::string, float>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>;
    const auto& field = _internal_analog();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "power_msg.PowerBoardStamped.analog");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "power_msg.PowerBoardStamped.analog");
      }
    }
  }

  // .power_msg.MOTORMODE mode = 4;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:power_msg.PowerBoardStamped)
  return target;
}

::size_t PowerBoardStamped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:power_msg.PowerBoardStamped)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, bool> digital = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_digital_size());
  for (const auto& entry : _internal_digital()) {
    total_size += _pbi::MapEntryFuncs<std::string, bool,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BOOL>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, float> analog = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_analog_size());
  for (const auto& entry : _internal_analog()) {
    total_size += _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>::ByteSizeLong(entry.first, entry.second);
  }
  // .std_msg.Header header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.header_);
  }

  // .power_msg.MOTORMODE mode = 4;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PowerBoardStamped::_class_data_ = {
    PowerBoardStamped::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PowerBoardStamped::GetClassData() const {
  return &_class_data_;
}

void PowerBoardStamped::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PowerBoardStamped*>(&to_msg);
  auto& from = static_cast<const PowerBoardStamped&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:power_msg.PowerBoardStamped)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.digital_.MergeFrom(from._impl_.digital_);
  _this->_impl_.analog_.MergeFrom(from._impl_.analog_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_header()->::std_msg::Header::MergeFrom(
        from._internal_header());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PowerBoardStamped::CopyFrom(const PowerBoardStamped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:power_msg.PowerBoardStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PowerBoardStamped::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PowerBoardStamped::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PowerBoardStamped::InternalSwap(PowerBoardStamped* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.digital_.InternalSwap(&other->_impl_.digital_);
  _impl_.analog_.InternalSwap(&other->_impl_.analog_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_.mode_)
      + sizeof(PowerBoardStamped::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(PowerBoardStamped, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata PowerBoardStamped::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_power_2eproto_getter, &descriptor_table_power_2eproto_once,
      file_level_metadata_power_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace power_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
